<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="144704" started-at="2018-12-15T10:40:59Z" finished-at="2018-12-15T10:43:24Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@14acaea5]" name="feature" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner2@5622fdf]" name="feature" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Test2" duration-ms="73800" started-at="2018-12-15T10:40:59Z" finished-at="2018-12-15T10:42:13Z">
      <class name="runner.Runner2">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.Runner2@5622fdf]" name="setUpClass" is-config="true" duration-ms="193" started-at="2018-12-15T16:10:59Z" finished-at="2018-12-15T16:10:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="FAIL" signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner2@5622fdf]" name="feature" duration-ms="73538" started-at="2018-12-15T16:10:59Z" description="Runs Cucumber Feature" data-provider="features" finished-at="2018-12-15T16:12:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Google search]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: java.lang.AssertionError: expected [true] but found [false]
	at cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:69)
	at cucumber.api.testng.AbstractTestNGCucumberTests.feature(AbstractTestNGCucumberTests.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at glue.Steps.i_should_have_as_a_title(Steps.java:45)
	at ✽.Then I should have "mobile" as a title(Feature1.feature:19)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.Runner2@5622fdf]" name="tearDownClass" is-config="true" duration-ms="2" started-at="2018-12-15T16:12:13Z" finished-at="2018-12-15T16:12:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.Runner2 -->
    </test> <!-- Test2 -->
    <test name="Test1" duration-ms="144704" started-at="2018-12-15T10:40:59Z" finished-at="2018-12-15T10:43:24Z">
      <class name="runner.Runner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.Runner@14acaea5]" name="setUpClass" is-config="true" duration-ms="193" started-at="2018-12-15T16:10:59Z" finished-at="2018-12-15T16:10:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="FAIL" signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@14acaea5]" name="feature" duration-ms="144443" started-at="2018-12-15T16:10:59Z" description="Runs Cucumber Feature" data-provider="features" finished-at="2018-12-15T16:13:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Google search]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: java.lang.AssertionError: expected [true] but found [false]
	at cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:69)
	at cucumber.api.testng.AbstractTestNGCucumberTests.feature(AbstractTestNGCucumberTests.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:400)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at glue.Steps.i_should_have_as_a_title(Steps.java:45)
	at ✽.Then I should have "mobile" as a title(Feature1.feature:19)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.Runner@14acaea5]" name="tearDownClass" is-config="true" duration-ms="1" started-at="2018-12-15T16:13:24Z" finished-at="2018-12-15T16:13:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.Runner -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
